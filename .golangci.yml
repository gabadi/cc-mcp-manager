run:
  timeout: 5m
  tests: true

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true
  
  gocyclo:
    min-complexity: 15
  
  gofmt:
    simplify: true
  
  goimports:
    local-prefixes: cc-mcp-manager
  
  revive:
    confidence: 0.8
  
  govet:
    enable-all: true
  
  misspell:
    locale: US
  
  nakedret:
    max-func-lines: 30
  
  prealloc:
    simple: true
    range-loops: true
    for-loops: false
  
  unparam:
    check-exported: false
  
  whitespace:
    multi-if: false
    multi-func: false

linters:
  disable-all: true
  enable:
    - bodyclose
    # - depguard  # Disabled - conflicts with internal package structure
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - exhaustive
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - revive
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace

issues:
  exclude-dirs:
    - vendor
    - .bmad-core
    - expansion-pack
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - typecheck  # Skip typecheck for test files while fixing field access patterns
    
    # Exclude unused warnings for UI view methods that are part of the interface
    - path: internal/ui/view\.go
      linters:
        - unused
    
    # Exclude unused warnings for utility functions that may be used in future
    - path: internal/ui/components/modal\.go
      linters:
        - unused
    
    # Allow hardcoded strings in UI components during development
    - path: internal/ui/
      linters:
        - goconst
        - gocritic  # Allow if-else chains during development
        - funlen    # Allow longer functions during UI development
        - exhaustive # Allow missing switch cases during development
    
    # Allow longer functions and style flexibility in components during development
    - path: internal/ui/components/
      linters:
        - funlen
        - gocritic
    
    # Allow build utilities flexibility
    - path: internal/testutil/
      linters:
        - gocritic
    
    # Allow main.go flexibility during development
    - path: main\.go
      linters:
        - gocritic
    
    # Disable field alignment warnings during development
    - linters:
        - govet
      text: "fieldalignment:"
    
    # Allow simple fmt.Sprintf usage during development
    - linters:
        - gosimple
      text: "unnecessary use of fmt.Sprintf"
    
    # Disable additional warnings during development phase
    - linters:
        - staticcheck
      text: "SA9003:"  # empty branch
    - linters:
        - staticcheck
      text: "SA1019:"  # deprecated usage
    - path: .*
      linters:
        - lll
    - path: .*
      linters:
        - ineffassign
    - linters:
        - govet
      text: "nilness:"
    - linters:
        - stylecheck
      text: "ST1003:"  # ALL_CAPS naming
    - linters:
        - staticcheck
      text: "SA4006:"  # unused assignment
    
    # Exclude known linter issues
    - path: main\.go
      linters:
        - gochecknoinits
    
    # Exclude shadow checking for common variable names
    - text: "shadow: declaration of \"err\""
      linters:
        - govet
    
    # Exclude magic number warnings for common UI constants
    - text: "Magic number"
      path: internal/ui/
      linters:
        - gomnd

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0
  
  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0